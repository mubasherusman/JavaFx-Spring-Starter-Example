package com.rameysoft.streamline.main.model;

// Generated Jun 28, 2015 9:47:25 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer")
public class Customer implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private String name;
	private String address;
	private String phone;
	private String cell;
	private Set<SalesOrder> salesOrders = new HashSet<SalesOrder>(0);

	public Customer() {
	}

	public Customer(String name) {
		this.name = name;
	}

	public Customer(String name, String address, String phone, String cell,
			Set<SalesOrder> salesOrders) {
		this.name = name;
		this.address = address;
		this.phone = phone;
		this.cell = cell;
		this.salesOrders = salesOrders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "address", length = 256)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "cell", length = 45)
	public String getCell() {
		return this.cell;
	}

	public void setCell(String cell) {
		this.cell = cell;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	@Cascade({CascadeType.SAVE_UPDATE,CascadeType.MERGE, CascadeType.REFRESH, CascadeType.PERSIST})
	public Set<SalesOrder> getSalesOrders() {
		return this.salesOrders;
	}

	public void setSalesOrders(Set<SalesOrder> salesOrders) {
		this.salesOrders = salesOrders;
	}

}
