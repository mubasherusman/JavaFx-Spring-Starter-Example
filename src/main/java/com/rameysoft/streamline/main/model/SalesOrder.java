package com.rameysoft.streamline.main.model;

// Generated Jun 28, 2015 9:47:25 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * SalesOrder generated by hbm2java
 */
@Entity
@Table(name = "sales_order")
public class SalesOrder implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private Customer customer;
	private String description;
	private Double totalAmount;
	private Date orderInsertDate;
	private Date orderUpdateDate;
	private Set<OrderLines> orderLineses = new HashSet<OrderLines>(0);
	private Set<Payment> payments = new HashSet<Payment>(0);

	public SalesOrder() {
	}

	public SalesOrder(Customer customer) {
		this.customer = customer;
	}

	public SalesOrder(Customer customer, String description,
			Double totalAmount, Date orderInsertDate, Date orderUpdateDate,
			Set<OrderLines> orderLineses, Set<Payment> payments) {
		this.customer = customer;
		this.description = description;
		this.totalAmount = totalAmount;
		this.orderInsertDate = orderInsertDate;
		this.orderUpdateDate = orderUpdateDate;
		this.orderLineses = orderLineses;
		this.payments = payments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "total_amount", precision = 22, scale = 0)
	public Double getTotalAmount() {
		return this.totalAmount;
	}

	public void setTotalAmount(Double totalAmount) {
		this.totalAmount = totalAmount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "order_insert_date", length = 19)
	public Date getOrderInsertDate() {
		return this.orderInsertDate;
	}

	public void setOrderInsertDate(Date orderInsertDate) {
		this.orderInsertDate = orderInsertDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "order_update_date", length = 19)
	public Date getOrderUpdateDate() {
		return this.orderUpdateDate;
	}

	public void setOrderUpdateDate(Date orderUpdateDate) {
		this.orderUpdateDate = orderUpdateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	@Cascade(CascadeType.ALL)
	public Set<OrderLines> getOrderLineses() {
		return this.orderLineses;
	}

	public void setOrderLineses(Set<OrderLines> orderLineses) {
		this.orderLineses = orderLineses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.PERSIST, CascadeType.REFRESH, CascadeType.MERGE})
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

}
