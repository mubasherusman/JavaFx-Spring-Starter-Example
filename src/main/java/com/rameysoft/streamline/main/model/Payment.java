package com.rameysoft.streamline.main.model;

// Generated Jun 28, 2015 9:47:25 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Payment generated by hbm2java
 */
@Entity
@Table(name = "payment")
public class Payment implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private SalesOrder salesOrder;
	private Date insertDate;
	private Double totalReceivedAmount;
	private Date updateDate;
	private Set<PaymentLines> paymentLineses = new HashSet<PaymentLines>(0);

	public Payment() {
	}

	public Payment(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	public Payment(SalesOrder salesOrder, Date insertDate,
			Double totalReceivedAmount, Date updateDate,
			Set<PaymentLines> paymentLineses) {
		this.salesOrder = salesOrder;
		this.insertDate = insertDate;
		this.totalReceivedAmount = totalReceivedAmount;
		this.updateDate = updateDate;
		this.paymentLineses = paymentLineses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY, optional=false)
	@JoinColumn(name = "sales_order_Id", nullable = false)
	public SalesOrder getSalesOrder() {
		return this.salesOrder;
	}

	public void setSalesOrder(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "insert_date", length = 19)
	public Date getInsertDate() {
		return this.insertDate;
	}

	public void setInsertDate(Date insertDate) {
		this.insertDate = insertDate;
	}

	@Column(name = "total_received_amount", precision = 22, scale = 0)
	public Double getTotalReceivedAmount() {
		return this.totalReceivedAmount;
	}

	public void setTotalReceivedAmount(Double totalReceivedAmount) {
		this.totalReceivedAmount = totalReceivedAmount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payment")
	@Cascade(CascadeType.ALL)
	public Set<PaymentLines> getPaymentLineses() {
		return this.paymentLineses;
	}

	public void setPaymentLineses(Set<PaymentLines> paymentLineses) {
		this.paymentLineses = paymentLineses;
	}

}
